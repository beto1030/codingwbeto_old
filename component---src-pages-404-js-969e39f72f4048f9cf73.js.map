{"version":3,"file":"component---src-pages-404-js-969e39f72f4048f9cf73.js","mappings":"uLAGe,SAASA,IAEpB,OAUO,uBAAKC,UAAU,uCACX,gBAAC,EAAAC,KAAD,CAAMD,UAAU,mBAAmBE,GAAG,KAAtC,eACA,uBAAKF,UAAU,SACX,gBAAC,EAAAC,KAAD,CAAMD,UAAU,mBAAmBE,GAAG,KAAtC,QACA,gBAAC,EAAAD,KAAD,CAAMD,UAAU,mBAAmBE,GAAG,UAAtC,SACA,gBAAC,EAAAD,KAAD,CAAMD,UAAU,mBAAmBE,GAAG,YAAtC,YA2BlB,CCzCD,IAmCA,EAnCe,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAM3BC,EAJcC,kBAEKJ,EAASK,SAoBlC,OAdIF,EAEA,sBAAIN,UAAU,gBACZ,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAKE,IAKhB,gBAAC,EAAAH,KAAD,CAAMD,UAAU,mBAAmBE,GAAG,KACnCE,GAML,uBAAKJ,UAAU,YAAY,oBAAmBM,GAC5C,gBAACP,EAAD,MACA,4BAAOM,GACP,oCACK,IAAII,MAAOC,cADhB,qBAKL,C,+CC5BKC,EAAM,SAAC,GAA4C,IAAD,MAAzCC,EAAyC,EAAzCA,YAAmBR,GAAsB,EAA5BS,KAA4B,EAAtBT,OAAOC,EAAe,EAAfA,SAC/BS,GAASC,EAAAA,EAAAA,gBAAe,cAAxBD,KAgBFE,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBb,MAExC,OACE,gCACE,6BAAQc,EAAkBd,EAAN,MAAiBc,EAAiBd,GACtD,wBAAMe,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAAShB,IACnC,wBAAMiB,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAAS,UAAAN,EAAKG,oBAAL,mBAAmBK,cAAnB,eAA2BC,UAA3B,KAEX,wBAAMJ,KAAK,gBAAgBC,QAAShB,IACpC,wBAAMe,KAAK,sBAAsBC,QAASJ,IACzCX,EAGN,EAEDM,EAAIa,aAAe,CACjBZ,YAAY,IAQd,K,kGCvCaa,EAAO,kBAAM,gBAAC,IAAD,CAAKrB,MAAM,kBAAjB,EAEpB,UAhBqB,SAAC,GAAwB,IAAtBsB,EAAqB,EAArBA,KAAMvB,EAAe,EAAfA,SACtBwB,EAAYD,EAAKZ,KAAKG,aAAab,MAEzC,OACE,gBAAC,IAAD,CAAQD,SAAUA,EAAUC,MAAOuB,GAC/B,+BACI,iCACA,iEAKX,C","sources":["webpack://gatsby-starter-blog/./src/components/Navbar.js","webpack://gatsby-starter-blog/./src/components/Layout.js","webpack://gatsby-starter-blog/./src/components/Seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from 'gatsby'\n\nexport default function Navbar() {\n\n    return (\n        /*\n        <nav>\n            <h1>coding w/ beto</h1>\n            <div className=\"links\">\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/about\">About</Link>\n            </div>\n        </nav>\n        */\n           <nav className=\"my-4 d-flex justify-content-between\">\n               <Link className=\"header-link-home\" to=\"/\">codingwbeto</Link>\n               <div className=\"links\">\n                   <Link className=\"header-link-home\" to=\"/\">Home</Link>\n                   <Link className=\"header-link-home\" to=\"/about\">About</Link>\n                   <Link className=\"header-link-home\" to=\"/geology\">Geology</Link>\n               </div>\n           </nav>\n\n        /* \n         * this is a working collapsible nav, will add this later\n         *\n        <div>\n        \n            <div className=\"collapse\" id=\"navbarToggleExternalContent\">\n                <div className=\"pb-4\">\n                    <span className=\"text-muted\">Toggleable via the navbar brand.</span>\n                </div>\n            </div>\n            \n            \n            <nav className=\"navbar\">\n                <div className=\"container\">\n                     <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarToggleExternalContent\" aria-controls=\"navbarToggleExternalContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                       <span className=\"navbar-toggler-icon\"></span>\n                     </button>\n                </div>\n            </nav>\n\n        </div>\n        */\n)\n} \n\n","import * as React from \"react\"\n\nimport Navbar from \"./Navbar\"\n\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n\n  const rootPath = `${__PATH_PREFIX__}/`\n  \n  const locationPathname = location.pathname\n\n  const isRootPath = locationPathname === rootPath\n\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"container\" data-is-root-path={isRootPath}>\n      <Navbar />\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()} Alberto Alvarado\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport Seo from \"../components/Seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n        <section>\n            <h2>404</h2>\n            <p>Sorry, that page does not exist. &#128556;</p>\n        </section>\n\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["Navbar","className","Link","to","location","title","children","isRootPath","__PATH_PREFIX__","pathname","Date","getFullYear","Seo","description","lang","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","defaultProps","Head","data","siteTitle"],"sourceRoot":""}