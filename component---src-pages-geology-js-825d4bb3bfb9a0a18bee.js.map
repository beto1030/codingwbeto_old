{"version":3,"file":"component---src-pages-geology-js-825d4bb3bfb9a0a18bee.js","mappings":"uOA0EA,UAlEqB,SAAC,GAAwB,IAAD,EAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACtBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAGrC,OAAqB,IAAjBF,EAAMG,QAEN,QAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,IACjC,QAAC,IAAD,OACA,gLAmBJ,QAAC,IAAD,CAAQD,SAAUA,EAAWI,MAAOH,IAClC,QAAC,IAAD,OACA,cAAIQ,MAAO,CAAEC,UAAU,SAEfL,EAAMM,KAAI,SAAAC,GACR,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KACpD,OACE,cAAIC,IAAKJ,EAAKE,OAAOC,OACnB,mBACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,8BAET,uBACE,mBACE,QAAC,EAAAC,KAAD,CAAMC,GAAIT,EAAKE,OAAOC,KAAMO,SAAS,QACnC,gBAAMA,SAAS,YAAYlB,MAG/B,qBAAQQ,EAAKC,YAAYU,QAE3B,wBACE,aACEC,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,SAE/CL,SAAS,kBAMpB,KAId,EASM,IAAMM,EAAO,kBAAM,QAAC,IAAD,CAAKxB,MAAM,cAAjB,C","sources":["webpack://gatsby-starter-blog/./src/pages/geology.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport Bio from \"../components/Bio\"\nimport Seo from \"../components/Seo\"\n\n\nconst GeologyIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  /*var terms_and_defs = chapter2.map((id, index) => {\n      return {\n        id: id,\n        term: chapter2[index],\n        def: defs[index]\n      }\n    })\n  var chapter_1 = {\"chapter_1\": terms_and_defs}*/\n\n  return (\n    <Layout location={location}  title={siteTitle}>\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n\n             {posts.map(post => {\n                const title = post.frontmatter.title || post.fields.slug\n                return (\n                  <li key={post.fields.slug}>\n                    <article\n                      className=\"post-list-item\"\n                      itemScope\n                      itemType=\"http://schema.org/Article\"\n                    >\n                      <header>\n                        <h2>\n                          <Link to={post.fields.slug} itemProp=\"url\">\n                            <span itemProp=\"headline\">{title}</span>\n                          </Link>\n                        </h2>\n                        <small>{post.frontmatter.date}</small>\n                      </header>\n                      <section>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: post.frontmatter.description || post.excerpt,\n                          }}\n                          itemProp=\"description\"\n                        />\n                      </section>\n                    </article>\n                  </li>\n                )\n              })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default GeologyIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"Blog posts\" />\n\nexport const pageQuery = graphql`\n  query getGeologyPosts{\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC },filter: {fileAbsolutePath: {regex: \"/(geology)/\"  }}) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","Head"],"sourceRoot":""}